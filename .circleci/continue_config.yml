# Main config for workflows that will be conditionally run according to the parameters set at the initial config.yml. Only runs builds for paths that are changed.
# Also contains workflows that will be run on all branches such as node tests and test-new-chain
version: 2.1

# Pipeline parameters to run module builds if related files have been changed
parameters:
  run-build-repository:
    type: boolean
    default: false
  run-build-ui:
    type: boolean
    default: false
  run-build-server:
    type: boolean
    default: false
  run-build-monitor:
    type: boolean
    default: false
  run-build-packages:
    type: boolean
    default: false

################
### ALIASES ####
################
aliases:
  - &build-base
    docker:
      - image: cimg/base:2023.09
    parameters:
      run-build:
        type: boolean
        default: false
      run-build-2:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - setup_remote_docker:
          version: 20.10.23
      - run:
          name: Build and push docker images
          command: |
            ./.circleci/scripts/build_and_publish_docker_images.sh 
      - persist_to_workspace:
          root: workspace
          paths:
            - ./*
      # If no build is needed, echo 0 to run as success 
      - run: echo 0
  - &monitor-e2e-base
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: checkout metacoin-source-verify
          command: cd ~/project && git clone git@github.com:sourcifyeth/metacoin-source-verify.git
      - run:
          name: install
          command: cd ~/project/metacoin-source-verify && npm ci
      - run:
          name: monitor test
          command: cd ~/project/metacoin-source-verify && ./scripts/monitor_e2e.sh
          no_output_timeout: 30m
    docker:
      - image: cimg/node:16.15
  - &verification-e2e-base
    steps:
      - run:
          name: Avoid hosts unknown for github
          command: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run:
          name: checkout metacoin-source-verify
          command: cd ~/project && git clone git@github.com:sourcifyeth/metacoin-source-verify.git
      - run:
          name: install
          command: cd ~/project/metacoin-source-verify && npm ci
      - run:
          name: verification test
          command: cd ~/project/metacoin-source-verify && ./scripts/verification_e2e.sh
    docker:
      - image: cimg/node:16.15

####################
#### WORKFLOWS #####
####################
workflows:
  build_publish_deploy_docker:
    # Run build_publish_deploy when on staging or master AND when a module is changed and something needs to be built and deployed.
    when:
      # and:
      or:
        - equal: [master, << pipeline.git.branch >>]
        - equal: [staging, << pipeline.git.branch >>]
        # - or:
        #     [
        #       << pipeline.parameters.run-build-repository >>,
        #       << pipeline.parameters.run-build-server >>,
        #       << pipeline.parameters.run-build-monitor >>,
        #       << pipeline.parameters.run-build-packages >>,
        #       << pipeline.parameters.run-build-ui >>,
        #     ]
    jobs:
      - tests-node-v16
      - build-push-monitor:
          run-build: << pipeline.parameters.run-build-monitor >>
          run-build-2: << pipeline.parameters.run-build-packages >> # monitor depends on packages
      - build-push-repository:
          run-build: << pipeline.parameters.run-build-repository >>
      - build-push-server:
          run-build: << pipeline.parameters.run-build-server >>
          run-build-2: << pipeline.parameters.run-build-packages >> # server depends on packages
      - build-push-ui:
          run-build: << pipeline.parameters.run-build-ui >>
      - deploy:
          requires:
            - build-push-monitor
            - build-push-repository
            - build-push-server
            - build-push-ui
      - monitor-e2e-goerli:
          requires:
            - deploy
      - monitor-e2e-sepolia:
          requires:
            - deploy
      - verification-e2e-goerli:
          requires:
            - deploy
      - verification-e2e-sepolia:
          requires:
            - deploy  # Tests workflow for not staging or master
  tests:
    when:
      and:
        - not:
            equal: [master, << pipeline.git.branch >>]
        - not:
            equal: [staging, << pipeline.git.branch >>]
    jobs:
      - tests-node-v16

  # Has to run always. Can't regex filter on add-chain-{chainId} branch names see: https://stackoverflow.com/questions/55839004/circleci-regex-filtering-match-within-string
  test-new-chain:
    jobs:
      - test-new-chain

#######################
### JOB DEFINITIONS ###
#######################
jobs:
  build-push-monitor:
    <<: *build-base
    environment:
      SERVICE: "monitor"
      DOCKER_BUILD_CONTEXT: "."
      DOCKERFILE: "services/monitor/Dockerfile"
  build-push-repository:
    <<: *build-base
    environment:
      SERVICE: "repository"
      DOCKER_BUILD_CONTEXT: "./h5ai-nginx"
      DOCKERFILE: "./h5ai-nginx/Dockerfile"
  build-push-server:
    <<: *build-base
    environment:
      SERVICE: "server"
      DOCKER_BUILD_CONTEXT: "."
      DOCKERFILE: "services/server/Dockerfile"
  build-push-ui:
    <<: *build-base
    environment:
      SERVICE: "ui"
      DOCKER_BUILD_CONTEXT: "./ui"
      DOCKERFILE: "./ui/Dockerfile"
  deploy:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Trigger Deploy Events
          no_output_timeout: 5m
          command: |
            ./.circleci/scripts/trigger_deploy.sh
  tests-node-v16:
    docker:
      - image: cimg/node:16.15
    working_directory: ~/sourcify
    parameters:
      run_coveralls:
        type: boolean
        default: false
    steps:
      - run:
          name: Versions
          command: npm version
      - checkout
      - run:
          name: install dependencies
          command: npm install
      - run:
          name: lint
          command: npm run lerna-lint
      - run:
          name: tsc and test
          command: npx lerna run build && npx lerna run lerna-test
      - run:
          name: coverage
          command: npx lerna run cov:send
  test-new-chain:
    docker:
      - image: cimg/node:16.15
    working_directory: ~/sourcify
    steps:
      - checkout
      - run:
          name: install dependencies
          command: npm install
      - run:
          name: build
          command: npx lerna run build
      - run:
          name: test new chain PR
          command: ./.circleci/scripts/test_new_chain_support.sh
  monitor-e2e-goerli:
    <<: *monitor-e2e-base
    environment:
      CHAIN_ID: 5
      CHAIN_NAME: goerli
  monitor-e2e-sepolia:
    <<: *monitor-e2e-base
    environment:
      CHAIN_ID: "11155111"
      CHAIN_NAME: sepolia
  verification-e2e-goerli:
    <<: *verification-e2e-base
    environment:
      CHAIN_ID: 5
      CHAIN_NAME: goerli
  verification-e2e-sepolia:
    <<: *verification-e2e-base
    environment:
      CHAIN_ID: "11155111"
      CHAIN_NAME: sepolia