{"compiler":{"version":"0.8.17+commit.8df45f5f"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"contract IEtherToken","name":"weth","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"address","name":"taker","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc20FillAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"indexed":false,"internalType":"struct LibStructure.Fee[]","name":"fees","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"erc1155Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"erc1155FillAmount","type":"uint128"}],"name":"ERC1155BuyOrderFilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"address","name":"taker","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"indexed":false,"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"erc1155Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"indexed":false,"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"indexed":false,"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"name":"ERC1155BuyOrderPreSigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"}],"name":"ERC1155OrderCancelled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"indexed":false,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"address","name":"taker","type":"address"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc20FillAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"indexed":false,"internalType":"struct LibStructure.Fee[]","name":"fees","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"erc1155Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"erc1155FillAmount","type":"uint128"}],"name":"ERC1155SellOrderFilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"maker","type":"address"},{"indexed":false,"internalType":"address","name":"taker","type":"address"},{"indexed":false,"internalType":"uint256","name":"expiry","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nonce","type":"uint256"},{"indexed":false,"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"indexed":false,"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"indexed":false,"internalType":"address","name":"erc1155Token","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"name":"ERC1155SellOrderPreSigned","type":"event"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder[]","name":"sellOrders","type":"tuple[]"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature[]","name":"signatures","type":"tuple[]"},{"internalType":"address[]","name":"takers","type":"address[]"},{"internalType":"uint128[]","name":"erc1155FillAmounts","type":"uint128[]"},{"internalType":"bytes[]","name":"takerDatas","type":"bytes[]"},{"internalType":"bool","name":"revertIfIncomplete","type":"bool"}],"name":"batchBuyERC1155sEx","outputs":[{"internalType":"bool[]","name":"successes","type":"bool[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"orderNonces","type":"uint256[]"}],"name":"batchCancelERC1155Orders","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"datas","type":"bytes[]"},{"internalType":"bool","name":"revertIfIncomplete","type":"bool"}],"name":"batchSellERC1155s","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"sellOrder","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint128","name":"erc1155BuyAmount","type":"uint128"},{"internalType":"bytes","name":"takerData","type":"bytes"}],"name":"buyERC1155Ex","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"sellOrder","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"},{"internalType":"uint128","name":"buyAmount","type":"uint128"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"bytes","name":"takerData","type":"bytes"}],"name":"buyERC1155FromProxy","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"orderNonce","type":"uint256"}],"name":"cancelERC1155Order","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"order","type":"tuple"}],"name":"getERC1155BuyOrderHash","outputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"order","type":"tuple"}],"name":"getERC1155BuyOrderInfo","outputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"enum LibNFTOrder.OrderStatus","name":"status","type":"uint8"},{"internalType":"uint128","name":"orderAmount","type":"uint128"},{"internalType":"uint128","name":"remainingAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.OrderInfo","name":"orderInfo","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"uint248","name":"nonceRange","type":"uint248"}],"name":"getERC1155OrderNonceStatusBitVector","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"order","type":"tuple"}],"name":"getERC1155SellOrderHash","outputs":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"order","type":"tuple"}],"name":"getERC1155SellOrderInfo","outputs":[{"components":[{"internalType":"bytes32","name":"orderHash","type":"bytes32"},{"internalType":"enum LibNFTOrder.OrderStatus","name":"status","type":"uint8"},{"internalType":"uint128","name":"orderAmount","type":"uint128"},{"internalType":"uint128","name":"remainingAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.OrderInfo","name":"orderInfo","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"sellOrder","type":"tuple"},{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"buyOrder","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"sellOrderSignature","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"buyOrderSignature","type":"tuple"},{"internalType":"bytes","name":"sellTakerData","type":"bytes"},{"internalType":"bytes","name":"buyTakerData","type":"bytes"}],"name":"matchERC1155Order","outputs":[{"internalType":"uint256","name":"profit","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"success","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"order","type":"tuple"}],"name":"preSignERC1155BuyOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"order","type":"tuple"}],"name":"preSignERC1155SellOrder","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"buyOrder","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155SellAmount","type":"uint128"},{"internalType":"bool","name":"unwrapNativeToken","type":"bool"},{"internalType":"bytes","name":"takerData","type":"bytes"}],"name":"sellERC1155","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"buyOrder","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155SellAmount","type":"uint128"},{"internalType":"bool","name":"unwrapNativeToken","type":"bool"},{"internalType":"bytes","name":"takerData","type":"bytes"}],"name":"sellERC1155NotSupportedPartialSell","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"order","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"},{"internalType":"bytes","name":"takerData","type":"bytes"}],"name":"validateERC1155BuyOrderSignature","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"components":[{"internalType":"contract IPropertyValidator","name":"propertyValidator","type":"address"},{"internalType":"bytes","name":"propertyData","type":"bytes"}],"internalType":"struct LibNFTOrder.Property[]","name":"erc1155TokenProperties","type":"tuple[]"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155BuyOrder","name":"order","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"}],"name":"validateERC1155BuyOrderSignature","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"order","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"}],"name":"validateERC1155SellOrderSignature","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"maker","type":"address"},{"internalType":"address","name":"taker","type":"address"},{"internalType":"uint256","name":"expiry","type":"uint256"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"uint256","name":"erc20TokenAmount","type":"uint256"},{"components":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"feeData","type":"bytes"}],"internalType":"struct LibNFTOrder.Fee[]","name":"fees","type":"tuple[]"},{"internalType":"address","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"},{"internalType":"uint128","name":"erc1155TokenAmount","type":"uint128"}],"internalType":"struct LibNFTOrder.ERC1155SellOrder","name":"order","type":"tuple"},{"components":[{"internalType":"enum LibSignature.SignatureType","name":"signatureType","type":"uint8"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"internalType":"struct LibSignature.Signature","name":"signature","type":"tuple"},{"internalType":"bytes","name":"takerData","type":"bytes"}],"name":"validateERC1155SellOrderSignature","outputs":[],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Feature for interacting with ERC1155 orders.","kind":"dev","methods":{"batchCancelERC1155Orders(uint256[])":{"details":"Cancel multiple ERC1155 orders by their nonces. The caller      should be the maker of the orders. Silently succeeds if      an order with the same nonce has already been filled or      cancelled.","params":{"orderNonces":"The order nonces."}},"batchSellERC1155s(bytes[],bool)":{"details":"Sells multiple ERC1155 assets by filling the      given orders.","params":{"datas":"The encoded `sellERC1155` calldatas.","revertIfIncomplete":"If true, reverts if this        function fails to fill any individual order."}},"buyERC1155Ex((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,uint128),(uint8,uint8,bytes32,bytes32),address,uint128,bytes)":{"params":{"erc1155BuyAmount":"The amount of the ERC1155 asset        to buy.","sellOrder":"The ERC1155 sell order.","signature":"The order signature.","taker":"The address to receive ERC1155. If this parameter        is zero, transfer ERC1155 to `msg.sender`."}},"cancelERC1155Order(uint256)":{"details":"Cancel a single ERC1155 order by its nonce. The caller      should be the maker of the order. Silently succeeds if      an order with the same nonce has already been filled or      cancelled.","params":{"orderNonce":"The order nonce."}},"getERC1155BuyOrderHash((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,(address,bytes)[],uint128))":{"details":"Get the EIP-712 hash of an ERC1155 buy order.","params":{"order":"The ERC1155 buy order."},"returns":{"orderHash":"The order hash."}},"getERC1155BuyOrderInfo((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,(address,bytes)[],uint128))":{"details":"Get the order info for an ERC1155 buy order.","params":{"order":"The ERC1155 buy order."},"returns":{"orderInfo":"Infor about the order."}},"getERC1155OrderNonceStatusBitVector(address,uint248)":{"details":"Get the order nonce status bit vector for the given      maker address and nonce range.","params":{"maker":"The maker of the order.","nonceRange":"Order status bit vectors are indexed        by maker address and the upper 248 bits of the        order nonce. We define `nonceRange` to be these        248 bits."},"returns":{"_0":"bitVector The order status bit vector for the         given maker and nonce range."}},"getERC1155SellOrderHash((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,uint128))":{"details":"Get the EIP-712 hash of an ERC1155 sell order.","params":{"order":"The ERC1155 sell order."},"returns":{"orderHash":"The order hash."}},"getERC1155SellOrderInfo((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,uint128))":{"details":"Get the order info for an ERC1155 sell order.","params":{"order":"The ERC1155 sell order."},"returns":{"orderInfo":"Infor about the order."}},"matchERC1155Order((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,uint128),(address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,(address,bytes)[],uint128),(uint8,uint8,bytes32,bytes32),(uint8,uint8,bytes32,bytes32),bytes,bytes)":{"details":"Matches a pair of complementary orders that have      a non-negative spread. Each order is filled at      their respective price, and the matcher receives      a profit denominated in the ERC20 token.","params":{"buyOrder":"Order buying an ERC1155 asset.","buyOrderSignature":"Signature for the buy order.","sellOrder":"Order selling an ERC1155 asset.","sellOrderSignature":"Signature for the sell order."},"returns":{"profit":"The amount of profit earned by the caller         of this function (denominated in the ERC20 token         of the matched orders)."}},"onERC1155Received(address,address,uint256,uint256,bytes)":{"details":"Callback for the ERC1155 `safeTransferFrom` function.      This callback can be used to sell an ERC1155 asset if      a valid ERC1155 order, signature and `unwrapNativeToken`      are encoded in `data`. This allows takers to sell their      ERC1155 asset without first calling `setApprovalForAll`.","params":{"data":"Additional data with no specified format. If a        valid ERC1155 order, signature and `unwrapNativeToken`        are encoded in `data`, this function will try to fill        the order using the received asset.","operator":"The address which called `safeTransferFrom`.","tokenId":"The ID of the asset being transferred.","value":"The amount being transferred."},"returns":{"success":"The selector of this function (0xf23a6e61),         indicating that the callback succeeded."}},"preSignERC1155BuyOrder((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,(address,bytes)[],uint128))":{"details":"Approves an ERC1155 buy order on-chain. After pre-signing      the order, the `PRESIGNED` signature type will become      valid for that order and signer.","params":{"order":"An ERC1155 buy order."}},"preSignERC1155SellOrder((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,uint128))":{"details":"Approves an ERC1155 sell order on-chain. After pre-signing      the order, the `PRESIGNED` signature type will become      valid for that order and signer.","params":{"order":"An ERC1155 sell order."}},"sellERC1155((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,(address,bytes)[],uint128),(uint8,uint8,bytes32,bytes32),uint256,uint128,bool,bytes)":{"details":"Sells an ERC1155 asset to fill the given order.","params":{"buyOrder":"The ERC1155 buy order.","erc1155SellAmount":"The amount of the ERC1155 asset        to sell.","erc1155TokenId":"The ID of the ERC1155 asset being        sold. If the given order specifies properties,        the asset must satisfy those properties. Otherwise,        it must equal the tokenId in the order.","signature":"The order signature from the maker.","unwrapNativeToken":"If this parameter is true and the        ERC20 token of the order is e.g. WETH, unwraps the        token before transferring it to the taker."}},"validateERC1155BuyOrderSignature((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,(address,bytes)[],uint128),(uint8,uint8,bytes32,bytes32))":{"details":"Checks whether the given signature is valid for the      the given ERC1155 buy order. Reverts if not.","params":{"order":"The ERC1155 buy order.","signature":"The signature to validate."}},"validateERC1155BuyOrderSignature((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,(address,bytes)[],uint128),(uint8,uint8,bytes32,bytes32),bytes)":{"details":"Checks whether the given signature is valid for the      the given ERC1155 buy order. Reverts if not.","params":{"order":"The ERC1155 buy order.","signature":"The signature to validate."}},"validateERC1155SellOrderSignature((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,uint128),(uint8,uint8,bytes32,bytes32))":{"details":"Checks whether the given signature is valid for the      the given ERC1155 sell order. Reverts if not.","params":{"order":"The ERC1155 sell order.","signature":"The signature to validate."}},"validateERC1155SellOrderSignature((address,address,uint256,uint256,address,uint256,(address,uint256,bytes)[],address,uint256,uint128),(uint8,uint8,bytes32,bytes32),bytes)":{"details":"Checks whether the given signature is valid for the      the given ERC1155 sell order. Reverts if not.","params":{"order":"The ERC1155 sell order.","signature":"The signature to validate."}}},"stateVariables":{"ERC1155_RECEIVED_MAGIC_BYTES":{"details":"The magic return value indicating the success of a `onERC1155Received`."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"contracts/zero-ex/src/features/nft_orders/ERC1155OrdersFeature.sol":"ERC1155OrdersFeature"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","license":"MIT","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"]},"contracts/zero-ex/src/features/interfaces/IERC1155OrdersEvent.sol":{"keccak256":"0xb867e11e99050a8f42a1ab066867d06805975e50f142b2413633811d0de501e1","license":"Apache-2.0","urls":["bzz-raw://3c9dce4801e6c351b457f16a3b91458130517b63279917ad64954d27cef3d564","dweb:/ipfs/QmX4MH4ynzL6qQ2fvNRUq348KAXxQZxQ8Wyz5suW991U5f"]},"contracts/zero-ex/src/features/interfaces/IERC1155OrdersFeature.sol":{"keccak256":"0xeeff4ef966f382e8a92d8986f9ce7b4c2295db7846114b79532cbc445b5f1300","license":"Apache-2.0","urls":["bzz-raw://e3fe5251db4a0726a6489d1d46bc39c0bd899839b044d1ac0ab757b7c68b0162","dweb:/ipfs/QmSHQCM7AWsX4KfaAB6C5JMbuYQjSv4nzgPmtgRnMqdymC"]},"contracts/zero-ex/src/features/libs/LibMultiCall.sol":{"keccak256":"0xc1adf6a8ce15ab4a975d90a1149d010b2203a406532a944bf8d181ad5bde4b98","license":"MIT","urls":["bzz-raw://9078c929646f81949f9e2fcabb1591a6609c379287346b07d32c186660e9197e","dweb:/ipfs/QmRHikxdntzvCe1bq3Tu2dimQxNLkF8zyuJx6ZeFnnXqwk"]},"contracts/zero-ex/src/features/libs/LibNFTOrder.sol":{"keccak256":"0x68adf2c866bc621e52094d4c8e75d34d6c46226159a47f3835cbc8e0cdeec414","license":"Apache-2.0","urls":["bzz-raw://6c70a89b3d6c7b4e58cb3aba86fcb382e6ef2ab8051c9383418cd81680e73a64","dweb:/ipfs/QmSkvwh9kR7fYuoAhrKbrEtKo4iP2CHo8FVxLf8B7PbviC"]},"contracts/zero-ex/src/features/libs/LibSignature.sol":{"keccak256":"0xfe8e32d64181ae4045ade9ecb36343bcb8f84fcc58cc2a8a95345711b7f93a3b","license":"Apache-2.0","urls":["bzz-raw://08e6b3af300b63c0caa07aa85922b596e29388d6bb1518dfddf523cce76256c9","dweb:/ipfs/QmaGUEmBjsCkHsFauyzNyAiqt2SXmWrTupm5zXd1tMdmwV"]},"contracts/zero-ex/src/features/libs/LibStructure.sol":{"keccak256":"0x6a60aa91b078df1c026d2885af36468d0865fa820117f71f13396c991d252f42","license":"MIT","urls":["bzz-raw://b1af18a798908f79cbfcfb8791e298220b9bbbf9b1f7d77d9e7337c9c6f0bfdf","dweb:/ipfs/QmPP9k5KtAzgXq6cdp2ryf43c2vwtavPxYSGaeRnKM2EEo"]},"contracts/zero-ex/src/features/libs/LibTypeHash.sol":{"keccak256":"0xb03500235fc56a76ec8f32bafeb76da4020e7a24777fde5498dc081a289bedea","license":"MIT","urls":["bzz-raw://bcc907cd9e23c3ea89ccc56eafb08e8a08bfc1315e3718ef0b1a3553a4b9bd8d","dweb:/ipfs/QmVvvXwMCAq6f6GPPWohrRgGzQZCAq2f2kwzvDfGHJqQWg"]},"contracts/zero-ex/src/features/nft_orders/ERC1155OrdersFeature.sol":{"keccak256":"0x23ff2890bd3746349d7c35e71fa6baffca01516de97c52061768da46a6f8b071","license":"Apache-2.0","urls":["bzz-raw://d1541b58a61b1282360b686d0d6b39f1698ad5bdc7a30e1a3f8e602fafc5f6a6","dweb:/ipfs/QmUpHmSFYZhjfaRqs64QFqVBqB7jgMAHZGkgvYrtjnbkGu"]},"contracts/zero-ex/src/features/nft_orders/NFTOrders.sol":{"keccak256":"0xa3de98196a19cab18b5fb971ef93009a662322f28cfefd8d18ab621649a57d39","license":"Apache-2.0","urls":["bzz-raw://87497505a7fbf5c7ca75634542d28f144d0769e97eb59726136aaca4e3a3b1e5","dweb:/ipfs/QmQTWevgRpLJ3ho6Wc2YXoTSVYzf3fHJbgJnakxXvdauMy"]},"contracts/zero-ex/src/fixins/FixinEIP712.sol":{"keccak256":"0x68109af7c5e7a8ff76657cb1eee869e2ff78997829092d34e294b85d60258cbe","license":"Apache-2.0","urls":["bzz-raw://4fc8eccd19b34d8e42888ca6c6e5847a903fdb7382e2fe88f17b344358e80949","dweb:/ipfs/QmYdsdr3gZyEe6buuQ3hzQrr9jmUbti3b4KxKpYPGxjW7a"]},"contracts/zero-ex/src/fixins/FixinERC1155Spender.sol":{"keccak256":"0xe3ca912729842fd62942e8adf600f6f11bfd1d9127803ef9084cfa71a063aea7","license":"Apache-2.0","urls":["bzz-raw://b165fd3a84654b86ce21edb95028ce30ce97e10ef2259e7086f963205af061b0","dweb:/ipfs/QmUR4ZpD4cc8K4GJ7ybs97ehQhH4T8BdutJ5ivfcBGu3LS"]},"contracts/zero-ex/src/fixins/FixinTokenSpender.sol":{"keccak256":"0xe3d13e3571972c039a1748b0b5d213d8d57323ed4ab65c27316cdabd704b1c6f","license":"Apache-2.0","urls":["bzz-raw://518679fe47e4d46a5ee4f737b729445896857d02cfc3505314f0deff443410e7","dweb:/ipfs/QmPx1dnn67zLjSSCnf85V9azQG536Kp4fXuxAqq8PoWZm1"]},"contracts/zero-ex/src/storage/LibCommonNftOrdersStorage.sol":{"keccak256":"0xeafd38aab4651397afa957b5c518212dac3f70fa912edb418f7a2e838d919d61","license":"Apache-2.0","urls":["bzz-raw://8f4d66a03bb27ef8b932829d965a0e4b1bba80ac6bdb0e9ce6f75ecc261baa6e","dweb:/ipfs/QmSamtY8nerYJoURhLQqKzhthiAHUTMAvAAKxhBev5wVsF"]},"contracts/zero-ex/src/storage/LibERC1155OrdersStorage.sol":{"keccak256":"0x865c07193eb8626b2acc628c9337fca0f7d383bff44a7f995bb4cc550112fe50","license":"Apache-2.0","urls":["bzz-raw://f0fcd22df47e8a7e863cb65ed813ab326c126edf84baae7a851aa3e43db27f5e","dweb:/ipfs/QmUEcgUkC9LVKkc1hicngY7FBbL9UTzSXgP3nqnWTTKBXb"]},"contracts/zero-ex/src/storage/LibStorage.sol":{"keccak256":"0x66be2a111fd754c61eec0899ee3749d57d3bd5542bf6f23b8a850bca6ddcf45c","license":"Apache-2.0","urls":["bzz-raw://fd8be948cbc5d8f9b552c33daaeb55c4a5c9e9b5cfd518663a43e7b673c2e750","dweb:/ipfs/QmbSvLnpRu5Khp6Mk8ko61Janbz4Txv4iJSDaiUXA3SACG"]},"contracts/zero-ex/src/vendor/IEtherToken.sol":{"keccak256":"0x6ca1b55c816b443f584ded143c900dd1529d69dfcba2b06981b6269ff4c7ff7e","license":"Apache-2.0","urls":["bzz-raw://ec82f006a4d78edb8a09d26754cbbd2316dc8579146bb328198db763afd39b01","dweb:/ipfs/QmSYivosw1CwhSqDhgx2wPAA5ouzthYyCaZJLt2AD45TkJ"]},"contracts/zero-ex/src/vendor/IFeeRecipient.sol":{"keccak256":"0x180a0ec103a2f8c312a5074f6b64275b6cc70f3ca9fdb3554425335b6979cbee","license":"Apache-2.0","urls":["bzz-raw://684adaa8a321a94ad50d92786d281c9ecb3fb0e24b92ccc9a77bd1774f5012dd","dweb:/ipfs/QmQBudP6eU1bTJvdKRF1abf6EVJdjAs8o5n3iurKDrNco4"]},"contracts/zero-ex/src/vendor/IPropertyValidator.sol":{"keccak256":"0x5e7dc983f2c921cc8f842b0e540dc6caa754bcf0ca8329064d97d927fbdd79d3","license":"Apache-2.0","urls":["bzz-raw://1f4c51108e5d7b6f766656606939afc0472017ffc005adaa1e34fe6df062ea72","dweb:/ipfs/QmXYL9EJQypRodnpr2GZzLzv7fWLcUXxHfZFwKBCvkTRmQ"]}},"version":1}